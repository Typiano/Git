\documentclass[12pt]{article}
\usepackage[left=4cm,right=3cm]{geometry}
\usepackage[onehalfspacing]{setspace}
\usepackage{helvet}
\usepackage{multirow}
\usepackage{hyperref}
\usepackage{mathtools}
\renewcommand{\familydefault}{\sfdefault}

\usepackage{graphicx}
\graphicspath{{Bilder/}}
\usepackage[ngerman]{babel}

%Wörter richtig Trennen

\title{\large \textbf{Wilhelm-Ostwald-Schule, Gymnasium der Stadt Leipzig} \\\textbf{Dokumentation zur Besonderen Lernleistung}}
\author{\large Im Fachbereich: Informatik}
\date{}
\begin{document}
\maketitle

\begin{tabular}[H]{p{5cm}p{8,5cm}}
\textbf{Thema:} &Programmierung und Bau eines Statuswürfels zur Steuerung eines E-Ink-Displays\\&\\
\textbf{Vorgelegt von:} &Leopold Hofmann\\&\\
\textbf{Schuljahr:}& 2023/2024 [?] \\&\\
\textbf{externer Betreuer:}& Phillip Dockhorn \newline Hochschule Merseburg \newline Fachbereich Ingenieur- und Naturwissenschaften \newline LfbA Mikroprozessortechnik/Embedded Systems\\&\\
\textbf{Interner Betreuer:}& Simon Koch\\
\end{tabular}
\vfill
Leipzig, \today

\thispagestyle{empty}
\newpage

\renewcommand{\abstractname}{Kurzreferat}
\begin{abstract} %Format stimmt noch überhaupt nicht!!!
 Diese BeLL des Fachgebiets Informatik befasst sich mit dem Bau und der 
Programmierung eines Statuswürfels. Der Statuswürfel soll ein Tool zur 
Produktivitätsverbesserung sein. So kann der Nutzer durch einfache Interaktion mit 
dem Würfel beispielsweise seinen Beschäftigungsstatus ändern, einen Timer stellen
oder Smart-Home-Steuerung vornehmen. Im Wesentlichen handelt es sich um eine 
einfache, haptische Fernbedienung. 

Diese Arbeit bezieht sich zunächst auf die 
Änderung des Beschäftigungsstatus. Dafür werden drei Komponenten entwickelt, der 
Würfel, ein Server mit REST-API und ein E-Ink-Display.

Der Würfel ermittelt seine Ausrichtung mittels eines ESP32-Microcontrollers, welcher 
mit einem Beschleunigungssensor und Gyroskop verbunden ist. Mittels des ESP32 
wird zudem schon die erste Verarbeitung der Daten vorgenommen bzw. die 
Rohdaten in einen Rotationszustand umgewandelt. Weiter wird mit dem ESP32 eine 
Internetverbindung hergestellt, mit welcher der Rotationszustand per WLAN an einen 
Server gesendet werden kann. Dabei werden die Daten per HTTP-Request an eine 
REST-API übermittelt.

Die REST-API ist darauf ausgelegt, die übermittelten Daten vorzuhalten und bei 
Bedarf an andere Systeme weiterzuleiten. Darüber hinaus stellt diese weitere Daten 
bereit, wie Status-Texte oder Grafiken.

Ein zweiter ESP32, welcher mit einem E-Ink-Display verbunden ist, soll nun in der 
Lage sein, den korrekten Rotationszustand des Würfels inklusive weiterer Daten, wie 
ein Bild oder einen Text, per HTTP-Request abzufragen. Daraufhin zeigt das E-Ink-Display je nach empfangenen Daten einen Text oder ein Bild an.
\end{abstract}
\thispagestyle{empty}
\newpage
\thispagestyle{empty}
\tableofcontents
\thispagestyle{empty}
\newpage

\setcounter{page}{1}
\section{Einleitung} %inklusive explizieter Beschreibung der Idee
%Motivation? Zielstellung? mehr subsections?
In sowohl vielen Kanzleien als auch vielen Büros wird veraltet immer noch viel zu viel Zettelwirtschaft betrieben. Damit wird hier auch besonders das Anbringen von Klebezetteln oder Haftnotizen zum Darstellen der derzeit verübten Tätigkeit an der Tür eines Büroraumes beschrieben. Diese Zettelchen erzeugen viele Probleme. Zum einen erzeugen sie durch Erwerb und Entsorgung eine nicht notwendige Kostenquelle und zum anderen wird das Entfernen dieser Papierstücke zu oft auch aus Faulheit vergessen, wodurch es zu Fehlkommunikationen in Bürogebäuden kommen kann.

Daher soll das Ziel dieses Projektes sein, diese Zettel zeitgemäß durch ein digitales und ferngesteuertes Display zu ersetzen, welches zudem auch eine einfache, haptische und intuitive Steuerung durch einen drehbaren und intelligenten Statuswürfel besitzt, welcher seinen Status bzw. seinen  Rotations-Status selbstständig auslesen kann.

Zur Umsetzung dieser Ziele müssen zuerst weitere Feststellungen getroffen werden. Weder der Statuswürfel, noch das Display selber sollten eine konstante Energiezufuhr benötigen, sondern optimalerweise kabellos agieren, denn nur so kann der Statuswürfel einfach und flexibel bedient werden. Beim Display auf der anderen Seite fehlt es derzeit an jeglicher Infrastruktur für eine Stromversorgung, da diese bis jetzt nie gebraucht wurde. Daher ist auch hier ein kabelloser Anschluss optimal. Folglich muss auch die Datenübertragung zwischen Statuswürfel und Display kabellos erfolgen, wozu entweder einer der beiden Komponenten einen Server darstellen muss, oder ein Server zwischen dem Statuswürfel und dem Display stehen muss. Für das Projekt sinnvoller ist die zweite Option, da durch die fehlenden Kabel der Grundkomponenten der eventuell große und dauerhafte Energiebedarf eines Servers nicht dauerhaft oder nur über einen kurzen Zeitraum gedeckt werden kann. Weiter gilt es zu berücksichtigen, dass durch einen zentralen Server das System auch leichter erweiterbar ist durch zum Beispiel ein zweites Display.

\newpage 
\section{Grundlagen}
    \subsection{Der ESP32}
    
    Der ESP-32 ist ein in China von Espressif preiswert hergestellter Mikrocontroller, welcher als jener auch oft benutzt wird, da er durch seine hohe Taktfrequenz von 80MHz bis 240MHz einen schönen Grundstein für viele Projekte legt. Auch in diesem Projekt bildet der ESP-32 eine Kernkomponente, welche nicht nur im Statuswürfel Verwendung findet, sondern auch im Display. Er besitzt 4MB externen Massenspeicher, sowie 512 kB RAM, wodurch der zum Ansteuern des ESP 32 nötige Treiber CH340 extern und nicht intern auf dem ESP 32 gespeichert wird. Des Weiteren ist er WLAN, mit bis zu 150 Mbps bzw. Megabit pro Sekunde, und auch Bluetooth-fähig, wodurch er sich für eine drahtlose Datenübertragung eignet. Darüber hinaus besitzt er verschiedene Kommunikationsschnittstellenprotokolle, wie SPI, I2C, oder I2S, von welchen für dieses Projekt das I2C-Protokoll besonders relevant ist. 

    Der ESP32 selber stellt jedoch nur einen leistungsfähigen Prozessor dar, welcher in der Regel schon auf einer Platine gelötet oder geklebt gekauft werden kann. Eines dieser Platinen ist auch 
    
    Alle diese Funktionen des ESP32 d1 mini können über die verschiedenen  Pin´s angesteuert werden, wie auch die Abbildung \ref{fig:ESP32-Pinout} zeigt. Für den Statuswürfel sind dabei die Pin´s des oberen Teils relevant, genauer der 3V3 Pin, welcher eine Spannungsversorgung von 3,3 V für anzuschließende Geräte darstellt, der GND-Pin, welcher den sogenannten "Ground'' und somit den Strom\-rück\-fluss bildet, sowie die IO21 und IO22 Pin´s, welche für das I2C-Protokoll den I2C1 CL oder SCL und I2C1 DA oder SDA -Anschluss bilden.
    
    \begin{figure}[h]
        \centering
        \includegraphics[width=0.75\textwidth]{Bilder/D1_Mini_ESP32_-_pinout.pdf}
        \caption{ESP32-Pinout}
        \label{fig:ESP32-Pinout}
    \end{figure}
    
    
    %Mikrocontroller
    %preiswert 
    %schnell
    %adaptiv
    %chinesisch
    %einer = 0,9\$ -siehe Alibaba
    %Multifunktional -> WLan ist integriert
    %wenig Speicher, Treiber wird extern installiert
    %datasheet!!!!
    \subsection{Batterieaufsatz} %wie heißt der? %no
    
    %Bild!
    Der AZDelivery Batterie Shield für Lithium Batterien für D1 Mini stellt eine einfache Möglichkeit dar, ein d1 mini Board, wie es auch beim esp32 verbaut wird, mit einem Akkumulator, genauer mit einem Lithium-Ionen Akkumulator zu verbinden.\footnote{\url{https://www.az-delivery.de/products/batterie-shield-fuer-lithium-batterien-fuer-d1-mini?variant=20290868379744&utm_source=google&utm_medium=cpc&utm_campaign=16964979024&utm_content=166733588295&utm_term=&gad_source=1&gclid=Cj0KCQiAgdC6BhCgARIsAPWNWH2-XvLCCuAaJCq1veKyI0Oo70QJt41ZKou6ud33rO-9K-Ah_jA_MbkaAsU9EALw_wcB}} Dabei erfüllt der Aufsatz die folgenden 3 Eigenschafte:
    \begin{enumerate}
    \item Ladeschutz: In dem Batterie Shield ist ein TP 5400 Chip verbaut. Dieser Chip besitzt eine Schutzschaltung wodurch ein kurzer maximaler Ladestrom von 1Â bzw. 1000 mA ermöglicht wird. Zudem ist eine Ladeautomatik integriert, durch welche der Lithium Ionen Akkumulator nicht überladen werden kann. %https://www.alldatasheet.com/html-pdf/1140419/ASIC/TP5400/110/1/TP5400.html
    \item leichte Bedienbarkeit: In das Batterie shield ist ein micro-USB Anschluss integriert, an welchem ein einfache Micro-USB Kabel angeschlossen werden kann. Das führt zu einer einfachen Bedienbarkeit, auch da das Shield mit einer im elektrotechnischem Bereich standart gemäßen Spannung von 5 Volt oder 10 Volt oder 12 Volt fähig ist den Akkumulator zu laden.
    \item integrierte Montage: Das Board kann einfach über oder unter dem d1 mini angebracht werden, da die beigelegten Stiftreihen simpel auf beiden Boards verlötet werden können.
    \end{enumerate}
       
   
    %https://www.az-delivery.de/products/batterie-shield-fuer-lithium-batterien-fuer-d1-mini?variant=20290868379744&utm_source=google&utm_medium=cpc&utm_campaign=16964979024&utm_content=166733588295&utm_term=&gad_source=1&gclid=Cj0KCQiAgdC6BhCgARIsAPWNWH2-XvLCCuAaJCq1veKyI0Oo70QJt41ZKou6ud33rO-9K-Ah_jA_MbkaAsU9EALw_wcB
    
    \begin{figure}[h]
        \centering
        \includegraphics[width=0.75\textwidth]{Bilder/AZDelivery Battery Shield.png}
        \caption{Batterie Shield für Lithium Batterien für D1 Mini}
        \label{fig:Batterieaufsatz}
    \end{figure}

        
    \subsection{Der MPU6050}
    Der MPU-6050 ist ein elektronischer Mikrosensor (mikro-elektromechanisches System = MEMS), welcher zugleich als Thermometer, Gyroskop sowie Accelerometer verwendet werden kann. Somit kann er die Temperatur, seine Winkelgeschwindigkeit, seine Ausrichtung, sowie die auf ihn wirkende Beschleunigung messen.

    Das elektronische Thermometer basiert auf den unterschiedlichen Widerstand verschiedenster Stoffen bei unterschiedlichen Temperaturen. Wenn nun zum Beispiel ein Halbleiter verwendet wird, dann sinkt der Widerstand mit steigender Temperatur. Somit kann die Temperatur indirekt durch den sinkenden Widerstand bestimmt werden, jedoch viele elektronischen Thermometer nicht sonderlich genau, da durch die selbst verursachte Abwärme die zu messende Temperatur erhöht wird. Somit entsteht ein Messfehler von +2°C bis zu +5°C. Dieser ist davon abhängig, wie lange das Thermometer bereits misst, da zu Beginn die Abwärme und somit der Messfehler gering ist. Die Durchlüftung des Sensors mit Umgebungsluft sowie die erzeugte Abwärme haben zudem starken Einfluss auf den Messfehler.

    Ein Gyroskop verwendet einen sich möglichst Reibungsfrei drehenden Kreisel, um somit durch die Trägheit des Kreisels nach dessen Drehung den Drehwiderstand bzw. die zur Drehung notwendige Kraft zu messen. Nach der altbekannten Formel $F=m*a$ kann durch die gegebene Masse des Kreisels sowie gegebene Kraft, welche durch den Kreisel überwunden werden muss, die Beschleunigung $a$ nach $a=F/m$ ermittelt werden.

    Ein Accelerometer, auch Beschleunigungsmesser genannt, ist generell ein Messgerät zur Ermittlung der Beschleunigung, oft auch in Abhängig zu der Ausrichtung. In diesem Fall ist es ein elektronisches Messgerät und agiert auf der Basis von Mikro - Silicium-''Federn'', welche nur wenige Mikrometer breit sind. Je nach Abstand dieser ''Federn'' zu einem benachbarten "Kondensator" ändert sich dessen Kapazität. Je kleiner der Abstand, desto höher die Kapazität. Diese Änderung basiert auf vielen dieser ''Federn''. Somit kann die Beschleunigung linear bestimmt werden. Durch die drei achsige Aufstellung von drei linearen Accelerometern kann die Beschleunigung auch räumlich bestimmt werden. Da durch die Erde konstant eine Beschleunigung von exakt $g = 9,81 m/s$ auf das Accelerometer ausgeübt wird kann auch jederzeit bestimmt werden, welche Seite des Accelerometers oben bzw. unten ist.
    
    
    \subsection{Das I2C-Protokoll}
    \textbf{NOCHMAL ÄNDERN!}
    Der I²C-Bus (Inter-Integrated Circuit) wurde 1982 von Philips Semiconductors, heute NXP Semiconductors, entwickelt und hat sich seitdem zu einem weit verbreiteten Industriestandard für serielle Datenkommunikation entwickelt. Hauptsächlich wird er zur geräteinternen Kommunikation zwischen verschiedenen Schaltungsteilen verwendet, wie etwa in Fernsehgeräten oder zwischen einem Mikrocontroller und Peripherie-ICs.

    Der I²C-Bus wurde zunächst zur Kommunikation zwischen ICs in Geräten wie CD-Playern und Fernsehgeräten entwickelt. Die erste Standardisierung erfolgte 1992 mit der Version 1.0, die den ursprünglichen Standard mit 100 kbit/s um einen Fast-Mode mit 400 kbit/s und einen 10-Bit-Adressmodus erweiterte. Seitdem hat sich der Standard kontinuierlich weiterentwickelt. Version 2.0 führte 1998 den High-Speed-Mode mit bis zu 3,4 Mbit/s ein, während Version 3.0 im Jahr 2007 den Fast-Mode Plus mit bis zu 1 Mbit/s integrierte. Die neueste Spezifikation, Version 4.0 aus dem Jahr 2012, führte den Ultra-Fast-Mode mit bis zu 5 Mbit/s ein. Im Jahr 2021 wurden die Begriffe "Master" und "Slave" durch "Controller" und "Target" ersetzt, um die Terminologie zu modernisieren und an den neuen I3C-Standard anzupassen.

    Der I²C-Bus ist als Master-Slave-Bus konzipiert, wobei ein Controller (Master) die Kommunikation initiiert und die Targets (Slaves) darauf reagieren. Der Bus benötigt nur zwei Signalleitungen: eine Taktleitung (SCL) und eine Datenleitung (SDA), die beide mit Pull-up-Widerständen an die Versorgungsspannung angeschlossen sind. Die Kommunikation erfolgt mit positiver Logik, wobei ein High-Pegel einer logischen „1“ und ein Low-Pegel einer „0“ entspricht.

    Das Protokoll ermöglicht die Übertragung von Datenbits in Oktetten (8 Bit), gefolgt von einem Bestätigungsbit (ACK). Ein Adressierungsmechanismus erlaubt die Kommunikation mit bis zu 112 Geräten auf einem Bus, wobei eine Erweiterung auf 10-Bit-Adressen die Unterstützung von bis zu 1136 Geräten ermöglicht. Der Bus unterstützt verschiedene Modi, die unterschiedliche maximale Übertragungsraten bieten, von 100 kbit/s im Standard-Mode bis zu 5 Mbit/s im Ultra-Fast-Mode.

    Der I²C-Bus ist besonders vorteilhaft für die Steuerung von Peripheriegeräten, die keine hohen Übertragungsgeschwindigkeiten benötigen, wie Lautstärkeregler, Echtzeituhren oder kleine Speicherchips. Er ermöglicht eine einfache Implementierung und reduziert die Anzahl der erforderlichen Verbindungen, was die Kosten und Komplexität der Schaltungen senkt. Der Bus ist jedoch anfällig für Störungen und eignet sich daher besser für störungsarme Umgebungen.

    Der I3C-Bus, eingeführt von der MIPI Alliance im Jahr 2014, bietet abwärtskompatible Erweiterungen zum I²C-Bus. Er bietet höhere Übertragungsgeschwindigkeiten und kann bei mittleren Geschwindigkeiten das Serial Peripheral Interface (SPI) ersetzen. Der I3C-Standard ist proprietär und erfordert eine Mitgliedschaft in der MIPI Alliance für den vollen Zugriff auf die Spezifikationen.

    Insgesamt bleibt der I²C-Bus ein unverzichtbares Kommunikationsprotokoll für zahlreiche elektronische Anwendungen, von einfachen Steuerungsaufgaben bis hin zu komplexen Sensor- und Aktuatorsystemen, und hat durch seine ständige Weiterentwicklung und die Einführung von I3C seine Relevanz und Flexibilität bewahrt.


    
    \subsection{dreidimensionales Druckverfahren (3D Drucken)}
    Der 3D-Druck ist eine in ihrer Form neue Art der Herstellung von feinen, verschiedenartigen und einzigartigen Objekten. Um jedoch ein gewünschtes Objekt im 3D-Druckverfahren drucken zu können, muss es vorerst für die Maschiene bzw. den Drucker verständlich modelliert werden.
        \subsubsection{Modellierung}
        Modellieren beschreibt im physikalischem und auch informatischen Sprachgebrauch das Bilden eines Modells bzw. einer Abbildung der Realität, zur Vereinfachung eines komplexen Vorgangs. [MEHR!!!/ Beispiel evt.] \\
        In diesem Fall jedoch beschreibt Modellierung schlicht das erstellen eines Modells, welches die Realität möglichst genau abbildet. Genauer wird hierbei beim 3D-Druck das Erstellen eines für den 3D-Drucker verständlichen Modells bezeichnet. Somit gibt es auch einige für den 3D-Druck wichtige zu beachtende Faktoren.\\
        Der 3D-Drucker kann nicht ''ins Nichts'' drucken bzw. unter jeder Fläche benötigt der 3D-Drucker einen geeigneten Unterbau. Somit können verschiedenste hohle Strukturen bzw. Strukturen mit Überhang nur auf 2 verschiedene Art und Weisen gedruckt werden. Zum Einen kann man versuchen auf waagerechte Überhänge zu verzichten, indem man Schrägen mit einem Neigungswinkel, gemessen von der Vertikalen, von 45° bis 70° stattdessen benutzt. Je nach Schichtdicke, Material und Schichtbreite unterscheidet sich der maximale Neigungswinkel eines 3D-Druckers.%weiter erklären?%
        Des Weiteren können sehr gute 3D-Drucker je nach Druckeinstellungen sowie Filamentart ''Lücken'' bzw. vertikale Brücken mit einem Abstand von 8-13cm drucken.
        Zusätzlich können Überhänge durch ein temporäres, meist sehr schmales und dünnes leicht zu entfernendes Fundament bzw. Stütze gedruckt werden.\\
        Die einfachste Möglichkeit jedoch einen Hohlraum zu drucken, ist das zerteilen des Objekts in zwei Teile, wodurch die Decke nun auf dem Druckbett bzw. Druckboden aufliegt, wodurch die Decke bzw. der Hohlraum mit Leichtigkeit gedruckt werden kann. Bei dieser Methode muss nur beachtet werden, dass man einen Art Zusammensteckmechanismus modelliert, welcher entweder an sich schon hält oder welchen man leicht verkleben kann.
        
        \textbf{Abschliesender Satz?!?}

        
        \subsubsection{TinkerCAD}
        TinkerCAD ist ein weit verbreitetes Programm zur Erstellung von 3D-Modellen. Es ist online und konstenfrei, wodurch es auch an Beliebtheit erlangt hat. Doch das wichtigste ist, dass die von TinkerCAD bereitgestellte Nutzeroberläche sich intuitiv und nutzerfreundlich benutzen lässt. So lassen sich in das erstellte Modell schnell Objekte wie einen Würfel einfügen, sowie diesen beliebig auf er Arbeitsfläche verschieben. Dabei können verschiedenste Objekte wie Prismen, Kugeln oder auch Komplexe Formen wie Sterne, Ikosaeder, beliebige Texte oder auch sehr verschiedene vorgefertigte Formen wie zB. ein ''Cartoon eye-left'' oder einen weihnachtlichen Tannenbaum.

        Weiter kann man sämtliche Formen ''mergen'', zusammenführen, womit sie als eine einzige Form betrachtet werden. Das ist wehr nützlich, da sonst die modellierte Struktur sehr kompliziert und unein erscheint. \\
        Zuletzt und das ist eine der wichtigsten Funktionen, kann man Formen invertieren und somit eine Löschform aus ihr machen. Wenn man eine Löschform mit einer Nicht-Löschform, einer normalen Form, zusammenfügt, wird an der Stelle, an welcher sich die Form und die Löschform schneidet, die Form gelöscht und eine Neue Form entsteht. Diese neu erschaffenen Formen kann man auch abspeichern, wodurch sie leicht jederzeit verwendet werden können. 

        Mit diesen wenigen Funktionen schon ist es mit TinkerCAD möglich, im Wesentlichen alle denkbaren und für einen notwendigen Formen zu modellieren.
        \textbf{überhaupt hier machen? ja?}

        
        \subsubsection{3D Drucker} %Präzision!
        Um nun eine modellierte Form drucken zu können benötigt man selbstverständlicher Weise einen 3D-Drucker, doch das Drucken selbst ist auch eine schwierige Aufgabe. Unter Modellierung wurde schon ein Problem, das Drucken über der Leere, besprochen, es gibt jedoch im 3D-Drucker selbst noch weitere.\\
        %Aufbau erklären!
        Durch die große Druckerspitze, muss der 3D-Drucker von unten nach oben drucken und somit benötigt der 3D-Drucker ''Fahrplan'', wo er Drucken soll und wo er sich nach oben bewegen soll.  \\
        Des Weiteren werden solide Wände, oft um Material zu sparen, nicht vollständig solide gedruckt, sondern eine Füllstruktur gedruckt, welche aus bis zu 90\% Luft bestehen und trotz dessen stabil sind, da in der Regel regelmäßige Formen in dieser Füllstruktur verbaut werden, wie Dreiecke.  %zu Füllstrukturen Recherschieren
        
        
    \subsection{API}
    Das Wort ''API'' ist eine Abkürzung für ''Application Programming Interface'' oder übersetzt grob ''Programmierschnittstelle''. Somit ist eine API eine Schnittstelle zwischen zwei mit der API verbundenen informatischen Systemen. Diese Schnittstelle, durch welche Daten übertragen werden, kann von Programmierern genutzt werden, um die Datenübertragung zu kontrollieren oder die Daten zu manipulieren. Zudem kann man mit einer API mehr als nur zwei informatische Systeme verbinden und die Datenübertragung bei drei oder mehr Systemen steuern. Zusätzlich haben API's oft schon voreinprogrammierte vereinfachte Funktionen, welche die Programmierung oder grafische Darstellung stark vereinfachen können.
    % das lesen:
    %https://www.talend.com/de/resources/was-ist-eine-api/
    %https://de.wikipedia.org/wiki/Programmierschnittstelle


    
    \subsection{HTML / Domänen}
    HTML steht für ''Hypertext Markup Language'' oder auf deutsch ''Hypertext-Auszeichnungssprache''. HTML ist ein Dateityp, welcher dabei helfen soll, einen Text zu strukturieren, dazu zählt insbesondere die Strukturierung in ''head'' und ''body'', und auch teils zu formatieren, wie zum Beispiel die Schriftgröße oder das Erstellen von Tabellen. Zusätzlich kann man auch Metadaten in HTML leicht einfügen.

    Diese HTML-Dokumente sind die Grundlage des World-Wide-Web und werden von gängigen Browsern wie Safari, Opera, Firefox, Microsoft Edge oder Google Chrome unterstützt und dargestellt. Jedoch ist HTML ein Dateityp beziehungsweise eine Art Programmiersprache, welche nicht hauptsächlich für eine Formatierung ausgelegt ist, sondern lediglich für die semantische Strukturierung. Für die Formatierung wird daher häufig CSS verwendet, welches dann in Kombination mit dem HTML-Dokument von Browser dargestellt wird.

    %https://de.wikipedia.org/wiki/Hypertext_Markup_Language
    %https://praxistipps.chip.de/was-ist-html-verstaendlich-erklaert_40979

    \subsection{Domänen}
    Damäne = einzigartiges Passwort, welches zu einer Website führt. Link Email? Beispiele
    Mehr durchlesen!!
    Um eine Website zu erstellen benötigt man zwei wesentliche Komponenten. Zum Einen die Website selber bzw. einen html-Code für jene und zum anderen eine Adresse bzw. Domäne durch welche die Website später aufgerufen werden kann.

    Es ist dabei wichtig anzumerken, dass ein html-Code heute häufig nicht mehr selbst geschrieben werden muss, sondern durch verschiedenste Programme erleichtern erstellt wird und nur noch die Website designed werden muss.

    Eine Domäne ist sehr stark mit HTML verbunden, da man mit Ihr eine html Website aufrufen kann.
    
    


    
    \subsection{http-Request} %Get und Post
    http, oder ''Hypertext Transfer Protocol'', bezeichnet ein Protokoll zur Datenübertragung zwischen zwei informatischen Systemen.  Anwendung findet das http-Protokoll großteilig im World-Wide-Web, wo es die Informationsübergabe ,genauer das herunterladen von Websites auf den Browser regelt. Jedoch geschieht dies heutzutage meist mit einer Fortentwicklung des http-Protokolls, da dieses als veraltet und unsicher angesehen wird. Dessen Nachfolger, die https Datenübertragung ist sehr ähnlich, jedoch verwendet sie eine digitale Signatur mittels SSL um die Datenübertragung so sicherer zu machen.
    %https://www.xovi.de/was-bedeutet-http/
    
    Das Protokoll http hat zwei Hauptbefehle, mit welchen Daten gesendet oder auch gefordert werden können. Den POST-Befehl und den GET-Befehl. Diese beiden Befehle stellen die Grundlage für die http-Reguests dar. 
    
    Eine GET-Request besteht in der Regel aus dem Befehl ''GET'', gefolgt von der url der Seite, welche heruntergeladen werden soll. Es ist dabei nötig alle Informaionen in der url zu versenden. Der Nachteil dessen ist jedoch, dass viele Browser die url speichern und persönliche Daten damit gespeichert werden könnten. Daher kann man mit der POST-Request Daten außerhalb der url mitsenden. Diese werden dann nicht in der url zwischengespeichert.
    


    
    \subsection{E-Ink-Display} %eventuell inklusive Ansteuerung???
    Ein E-Ink-Display oder Electronic-Ink-Display oder in das deutsche übersetzt elektronische-Tinte-Bildschirm ist ein Art eines Bildschirms, bei welchem im Ge
    \subsection{Software}
        \subsubsection{MicroPython}
        Micro Python ist eine an Python angelehnte Programmiersprache, welche häufig zu einfachen Programmierung von Mikro-Kontrollern verwendet wird. ... Reinnehmen?????????? Nein?
        %\subsubsection{\LaTeX}
        \subsubsection{Git und Gitlab}
        Git ist eine kostenlose und frei zugängliche Software zu Versionsverwaltung von Daten. Auch wenn sie ursprünglich für Das Linus - Betriebssystem und deren Versionsverwaltung erstellt wurde, wird Git heutzutage sehr häufig für die Speicherung und Verwaltung von Versionen einzelner (Informatik-) Projekte genutzt. So findet sich auf Git eine sehr diverse Reihe verschiedenster, öffentlich zugänglicher Projekte, genannt Git-Repository`s.
        
        Für die Verwaltung stellt Git einige Befehle für die einzelnen Nutzer bereit. Zunächst muss klargestellt werden, dass Git mit zwei verschiedenen Instanzen arbeitet. Dem "Remote" bzw. den in Git abgespeicherten Daten und den ''Working Files'' bzw. den bei dem Nutzer abgespeicherten Daten. Zwischen diesen beiden Instanzen sind nun verschiedene Befehle möglich. Die wichtigsten Befehle sind der "pull" sowie der "push". Durch einen "pull" werden die im Git abgespeicherten Daten zu dem Nutzer kopiert. Der "push" andererseits kopiert die Daten des Nutzers auf die im Git gespeicherten Daten. Dabei ist anzumerken, dass nur die Änderung "gepusht" wird und auf diese, welche mittels eines "add" festgestellt wird, mit einem "commit" eine Änderungsüberschrift sowie ein Änderungsprotokoll angehängt werden kann. So werden im Git nicht nur die einzelnen Dateien gespeichert, sondern auch die historischen Änderungen und somit die früheren Versionen der Dateien. Dadurch wiederum können unvorhergesehene negative Änderungen der Dateien Rückgängig gemacht werden.

        Es gibt zudem viele verschiedene Software, mit welcher der Zugang zu dem Git-System erleichtert wird. Die größten und bekanntesten Beispiele dazu sind Gitlab und Github, von welchen Github oft als Programm für Privatpersonen und Gitlab häufig als Programm für Firmen oder Geschäftsleute angesehen wird. In dieser BeLL wurde auch ein Git-Repository mittels Gitlab erstellt. in diesem ist sämtlicher Code sowie alle Änderungen des Codes abgespeichert. Der Link dazu lautet \url{https://gitlab.com/htwk-fdit/bell/bell-hofmann/-/tree/main?ref_type=heads}.

        
\newpage
\section{Konzeption}
    \subsection{Überblick über das Projekt}
    Das Projekt beinhaltet wie schon in der Einleitung angedeutet den Bau eines Statuswürfels. Der Statuswürfel soll ein Objekt sein, welches durch einen Würfel repräsentiert wird, sowie welcher seinen Rotationszustand, repräsentiert durch seine obere Seite, an eine API sendet, wo die Daten weiterverarbeitet werden. Er soll zudem in der Lage sein, seine Temperatur, bzw. die Umgebungstemperatur um den Statuswürfel auszulesen.

    Darauf sollen die verarbeiteten Daten der API, somit ein Text und eine Temperatur weiter an ein E-Ink Display gesendet werden.

    Auf dem E-Ink-Display sollen die Daten daraufhin angezeigt werden. Dabei inbesondere der mit der API mitgegebene Text.

    Diese Textweitergabe sowie die API ist nötig, da die Daten flexibel über eine weitere Instanz geändert werden soll.Diese Instanz soll eine Website sein. Von dieser aus soll man einfach die Daten der API derart ändern, dass sie auf dem E-Ink-Display anders dargestellt werden. Zum einen wird sich hier auf 

    \subsection{Netzwerktopologie}

    Zuerst einmal sollte man klären, was eigendlich eine Netzwerktopologie ist.
    Der Begriff Netzwerktopologie bezeichnet die physische und logische Struktur von Knotenpunkten und Verbindungen in einem Netzwerk. Als den Knoten bezeichnet man in der Regel Netzwerkgeräte wie Switches, Router und Software mit Switch- und Router-Funktionen, etwa virtuelle Appliances. Netzwerktopologien werden meist in Form von Diagrammen visualisiert.
    
    https://www.computerweekly.com/de/definition/Netzwerktopologie

    Durch Netzwerktopologien kann die Struktur eines Netzwerkes in der Regel als Graph einfach visualisiert werden, wodurch das logische Verständnis der praktischen Funktionsweise des Netzwerkes vereinfacht wird. 

    In der folgenden Abbildung \ref{fig:Bild_Netzwerktopologie} ist die Topologie der in diesem Projekt geplanten Anwendung dargestellt. Dabei sind die Knoten bzw. Instanzen als gelbe Rechtecke mit Beschriftung dargestellt und die Kanten/ Pfeile stellen die Verbindungen beziehungsweise Beziehungen zwischen den einzelnen Instanzen dar.

    https://de.wikipedia.org/wiki/Graphentheorie

    So hat der Statuswürfel einfluss auf die API und umgekehrt, da sowohl der Statuswürfel der API Daten sendet und diese dadurch verändert, als auch die API durch eine GET-Anfrage Daten an den Statuswürfel sendet, um diesem Anweisungen zu geben. Gleichfalls ist auch die Beziehung zwischen API und Website  und die Beziehung zwischen E-Ink-Display und API aufgebaut. Die einzelnen Komponenten bzw. Instanzen unter sich, genauer der Statuswürfel, die Website und das E-Ink-Display besitzen keine Kanten oder Verbindungen untereinander, da sie nicht miteinander kommunizieren können und sämtlich kommunikation über die API ausgetragen wird. 
    Der Benutzer, hier "USER" hat ebenfalls eine besondere Rolle in dem Netzwerk. Er kann sowohl den Statuswürfel, als auch die Website beeinflussen und sie kontrollieren, indem er den Status des Statuswürfels ändert oder die Website mittels dort integrierten Funktionen benutzt. von dem Nutzer gehen jedoch nicht nur Pfeile aus sonder münden auch in ihm. Bei ihm münden sowohl Pfeile der Website, als auch vom E-Ink-Display, da beide Instanzen Daten an den Nutzer übermitteln können. Da der Nutzer selber kein dauerhafter, sondern wechselbarer und nicht maschineller Teil des Netzwerkes darstellt, ist er auch nicht gelb gekennzeichnet, sondern cyan.
    
    BILD ÜBERSRBEITEN!
         
    \begin{figure}[h]
        \centering
        \includegraphics[width=0.75\textwidth]{Bilder/Netzuwerktopologie2-1.png}
        \caption{grobe Darstellung der Netzwerktopologie}
        \label{fig:Bild_Netzwerktopologie}
    \end{figure}
    


    
    \subsection{Anforderungen an den Statuswürfel}
    % Es fehlt Stromsparung und Thermometer
    Der Statuswürfel ist gewissermaßen das Herzstück des Projekts und mit dieser muss verschiedenste Funktionen erfüllen. Es muss ein Gerät sein, welches sowohl Rotationsdaten ermittelt, diese in einen Rotationszustand umwandelt und jenen daraufhin drahtlos weitergibt. Das Gerät soll zudem Temperaturdaten ermitteln können. Diese Systeme müssen weiter auch ohne konstante kabelgebundene Stromquelle agieren können.  Somit ist ein Akkumulator unverzichtbar. %Akku in grundlagen?

    Alle diese Anforderungen können mit dem richtigen Aufbau überwunden werden. Der ESP 32 d1 mini ist hierbei essentiell, da er zum einen WLan-Fähig ist, wodurch eine drahtlose Datenübertragung ermöglicht wird, zum anderen aber auch einen leistungsfähigen Prozessor sowie ein integriertes I2C Protokoll. Das ist relevant, da der Sensor der hier verwendet werden soll, der MPU 6050, auch durch durch ein integriertes I2C Protokoll angesteuert werden kann. Er ist klein und kann schnell und relativ präzise Rotationsdaten sowie Temperaturdaten auslesen.%Info auch hier schreiben?

    Die Verbindung zwischen ESP 32 d1 mini und dem Sensor geschieht über 4 Kabel, einem zur Spannungsversorgung von 3,3 V und einem zum Rückfluss. Zwei sind zudem durch das I2C-Protokoll benötigt. 

    Der Sensor erzeugt nun 3 Rohdaten, welche im kartesischem Koordinatensystem die Beschleunigung auf der X, Y und Z Achse beschreiben. Da diese Rohdaten auch immer Schwankungen aufweisen und somit nicht exakt messen, soll aus mehreren Messreihen der Mittelwert gebildet werden. Wie viele Messreihen für einen  nötig sind, gilt es empirisch zu ermitteln. Zudem sind die Rohdaten in einem 16-Bit Zweierkomplement angegeben, wodurch sie zum besseren Verständnis erst in eine Dezimalzahl umgewandelt werden sollen. Im Idealfall wird die Beschleunigung dann in alle Richtungen von -1 bis 1 angegeben, wobei $1=g$, $g$ ist die Erdanziehungskraft mit $g = 9,81m/s$, entspricht. Wenn der Sensor nun dem kartesischem Koordinatensystem als Kanten des Würfels ausgerichtet ist, ergibt sich für jeden Rotationszustand des Würfels eine Kombination aus den Werten X, Y und Z, in welcher je zwei Werte ca. einer $0$ entsprechen, während ein Wert entweder ungefähr einer $-1$ oder einer $1$ entspricht. Somit kann der Rotationszustand des Statuswürfels ermittelt werden.

    Der ermittelte Rotationszustand soll über eine http-PUSH-Request an die API übermittelt werden. Der Rotationszustand ist dabei codiert in den Zahlen 1, 2, 3, 4, 5, 6, da der Würfel 6 Rotationszustände hat.

    Weiter soll eine Temperatur beim Statuswürfel gemessen werden. Die Temperatur kann glücklicherweise auch mit dem MPU 6050 gemessen werden, da es gleichzeitig auch als Thermometer fungiert. Die Temperatur kann so mit Leichtigkeit von dem ESP 32 D1 Mini ausgelesen werden. Es gilt nur zu beachten, dass wahrscheinlich durch Abwärme der Elektronik, entstanden durch Widerstand, der Betrag der Temperatur nach Umwandlung in °C zu hoch seinwird. Wie gravierend dieser Temperaturfehler sein wird muss empirisch ermittelt werden.

    Um den Statuswürfel kabellos zu gestalten muss zudem ein Akkumulator, sowie eine Kabelverbindung zwischen dem Akkumulator und dem Esp 32 d1 mini eingebaut werden. Jedoch ist die Verbindung zu einem Akkumulator nicht im Esp 32 d1 mini integriert, weshalb auf den ESP 32 D1 Mini ein Aufsatz aufgelötet sein soll, welcher einen Akkumulator unterstützt. 
    %Darauf weiter aufbauen!!!


    \subsection{Anforderungen an den Würfeldruck}
    Damit nun auch noch ein Würfel entsteht, sollen alle technischen Komponenten in einen 3D-gedruckten Würfel eingesetzt werden. %Ab hier stark überarbeiten!!!

    Damit man den Statuswürfel nun auch flexibel und intuitiv drehen kann, musste auch ein dementsprechend gut in der Hand liegender Würfel produziert werden, in welchem sich dann die verschiedenen Komponenten befinden. Um eine derart feine und komplexe Form herzustellen, wurde sich für ein 3D-Druck-Verfahren entschieden, da durch ein derartes Verfahren fein und mit viel Präzision gearbeitet werden kann, sowie schnell eine Herstellung erneut durchgeführt werden kann, falls der Würfel nicht exakt modelliert wurde. Modellieren beschreibt dabei das gestalten, bilden oder formen des Modells für den Statuswürfel, mit welchem er dann gedruckt werden soll. 

    Zum Modellieren kann man verschiedenste Programme bzw. Software verwenden. Die bekanntesten zum Modellieren für den 3D-Druck sind TinkerCAD, Blender, FreeCAD, OpenSCAD, Cura oder Zbrush. Das CAD im vielen dieser Programme steht für ''Computer-Aided Design'' oder zu deutsch ''rechnerunterstütztes Konstruieren''. In diesem Fall wurde sich für TinkerCAD entschieden, da es online und konstenlos eine breite und sehr einfach zu bedienende Nutzeroberfläche bietet, durch welche man mit Leichtigkeit einfache Formen, wie Würfel, Zylinder, Quader allgemein oder Prismen mit drei Seiten und somit dreidimensionale Dreiecke, in sämtlichen Variationen zusammenfügen kann, wie es auch für den Statuswürfel benötigt wird. 
    
    Die Optimalgröße für einen handlichen Statuswürfel orientiert sich bei der Größe eines üblichen Zauberwürfels oder umgangssprachlich ''Rubik´s-Cube'', da dieser mit seinen 5,7cm Kantenlänge eine sehr handliche Form darstellt. Beim Modellieren müssen zudem einige Eigenschaften des Würfels beachtet werden. Das größte Bauelement des Statuswürfels ist der Akkumulator, welcher mit einer Länge von 6cm, an seinen elektrischen Spannungsquellen und seinem Kabelursprung sogar 6,5cm, einer Breite von 5cm und einer Dicke von 0,5cm die Maße des Statuswürfels Maßgeblich bestimmen. Da der Statuswürfel ein Würfel sein soll, sowie eine Wanddicke nach außen von in der Regel 0,5cm, jedoch minimal 0,2cm haben soll, ist eine allgemeine Kantenlänge im äußeren Bereich von 7cm angebracht. 7cm sind zwar 1,3cm länger, als ein handelsüblicher Zauberwürfel, jedoch ist auch das noch eine sehr handliche Form. Weitere in der Modellierung zu berücksichtigende Objekte sind neben dem ESP32 und dem MPU 6050, für welche jeweils eine passende Plattform bzw passende Einkerbungen modeliert wurden, auch eine Öffnung für Stromzufuhr für den Akkumulator bzw eine Öffnung um die Software des ESP32 auch im Nachhinein noch verändern zu können. Des weiteren muss noch ein Loch für einen Reset-Taster gelassen werden, da dieser bei unerwartet akzidentell auftretenden Fehlern gebraucht werden könnte.
    
    \begin{figure}[h]
        \centering
        \includegraphics[width=0.75\textwidth]{Bilder/Huawei-MatePad-T8-vor-weissem-Hintergrund-658x370-8433d2da6f30d675.jpg}
        \caption{Die einzelnen Bauteile des Statuswürfels}
        \label{fig:Bild_Komponenten}
    \end{figure}
    
    Zuletzt sollte bedacht sein, dass alle Komponenten, wie in Abbildung \ref{fig:Bild_Komponenten} zu sehen, an deren korrekte Position platziert werden müssen und somit eine verschließbare Öffnung für ESP32, MPU6050 und die Batterie existieren muss und zudem gilt es allgemein zu beachten, dass ein 3D-Drucker nicht wahllos Strukturen in der Luft bzw ohne stabilen Unterbau drucken kann, denn ein handelsüblicher 3D-Drucker ist nur fähig Überhänge mit bis zu 45° Neigung sicher zu drucken. bei darauf ausgelegten Eigenschaften schafft ein 3D-Drucker bis zu 70°, gemessen von der Vertikalen.
    
    Daher ist es sinnvoll, den Würfel in zwei circa gleich großen Hälften zu drucken, weil so zum einen das Problem des Druckes mit Überhang als auch das Problem der Platzierung der Komponenten im Statuswürfel geschickt und problemlos umgangen werden kann. 
    
    In der nachfolgenden Abbildung \ref{fig:Bild _Würfel_Modell} ist ein Modell des Statuswürfels in TinkerCAD zu erkennen, wobei alle vorgenannten und notwendigen Anforderungen umgesetzt sind. Bemerkenswert ist zudem, dass alle Komponenten zudem weiter stabilisiert werden müssen, ausgenommen der Akkumulator, welcher bereits fest in seinem zugehörigen Platz sitzt.
    
    \begin{figure}[h]
        \centering
        \includegraphics[width=0.75\textwidth]{Bilder/Huawei-MatePad-T8-vor-weissem-Hintergrund-658x370-8433d2da6f30d675.jpg}
        \caption{Modell des Statuswürfels in TinkerCAD}
        \label{fig:Bild _Würfel_Modell}
    \end{figure}
    %bis hier stark überarbeiten!!!

    
    

    \subsection{Anforderungen an den Anzeigebildschirm}
    %Allgemeine Beschreibung
    Der Bildschirm alleine, das E-Ink-Display ist in der Lage für jeden Pixel des Displays die Farbe rot, schwarz oder weiß zu übergeben. Um auf das Display zuzugreifen wie auch beim Statuswürfel ein ESP 32 D1 Mini benutzt werden. Dieser kann über 8 verschiedene Pins mit dem E-Ink-Display kommunizieren. Die Funktionen der einzelnen Pins sind in der Tabelle ... aufgestellt.

    Das Ziel ist es je nach Rotationszustand entweder einen Text anzugeben, die Innentemperatur anzugeben, ein Bild anzugeben oder energiesparend deaktiviert zu sein. Weiter soll das E-Ink-Display
    %Stromversorgung


    
    


    
    \subsection{Anforderungen an die API}
    
    Die API stellt eine Verbindungsstelle zwischen dem Statuswürfel, dem E-Ink-Display und der Website dar. Diese Verbindungsstelle soll durch eine Internet-Seite repräsentiert sein, auf welche durch verschiedene url Daten, zum Beispiel der Rotationszustand und die Temperatur, übergeben werden sollen. 

    Prinzipiell soll die API die Rotationsdaten speichern, sowie jeder Date einen Text zuordnen, welcher auf dem E-Ink-Display zu sehen ist. Im Detail sind die Zuordungen zwischen Text und Rotationszustand in der Tabelle \ref{tab:Rot-Tex} aufgelistet.

    
    \begin{table}
        \centering
        \begin{tabular}{cc}
            \textbf{Rotationszustand} & \textbf{Anweisung bzw. Text dazu} \\
            1 & Wetterseite / Bildschirmschoner\\
            2 & hier wird ein voreingestelltes Bild angezeigt\\
            3 & Es ist frei, bitte hereintreten\\
            4 & In einer Besprechung, bitte nicht stören\\
            5 & Gerade instensiv am arbeiten, bitte nicht stören\\
            6 & DEAKTIVIERT\\
        \end{tabular}
        \caption{Zuordnungen zwischen Rotationszuständen und Texten}
        \label{tab:Rot-Tex}
    \end{table}


    \subsection{Anforderungen an die Website}
    Die Website hat eine besondere Funktion in dem Netzwerk, da auch ohne ihr der Betrieb des Systems funktioniert. Jedoch soll sie dem Nutzer einige nützliche Funktionen ermöglichen, welche entweder die Funktionalität des Statuswürfels erweitern, ändern oder vereinfachen. Dazu gehören sowohl Darstellen des Statusses des Statuswürfels über einen beliebigen Bildschirm, 
    
    soll eine leichte Änderung ermöglichen
    soll Status darstellen für eventuell späteren Zugriff
    ...

    
    
\newpage
\section{Durchführung} %Preise?
    \subsection{Der Statuswürfel}
    Der Statuswürfel besteht grob gesagt aus einem ESP 32 d1 mini in seinem Zentrum, welcher mittels des Sensors MPU6050 seinen eigenen Rotationszustand auslesen soll
        \subsubsection{Auslesung der Daten des MPU6050}
        Der MPU 6050 liefert Daten auf xxx Ebene. Diese müssen erst wie amn in dem foplgenden Code herauslesen kann in einen Wert zwischen 1 und -1 umgewandelt werden, wodurch man den Zustand
        \subsubsection{Integrierung der I2C Übertragung}
        Fragen:
         - 
        \subsubsection{Auswertung der Daten}
        \subsubsection{Modellieren}
        
        \subsubsection{der 3D-Druck}
        \subsubsection{Zusammenbau}
    \subsection{Die API}
    \subsection{Das E-Ink-Display}
\section{Zusammenfassung und Ausblick}
\subsection{Zusammenfassung}
    - Es wurde alles erreicht, nein! Bild!, wenig verbesserungen?...
    - Eingehen auf Startproblem, kann es das Startproblem lösen
    - was steht noch im weg?
    ist es einfach zu bedienen?
\subsection{Genauigkeit der Messungen}% empirische Ermittlung des Temperaturfehlers
    - Fehlerbetrachtung programmieren!!!!
    - prozentuale Fehlerabweichung testen!
    - auch sinn der rundung und Fehlerabweichung nach der Rundung
\subsection{Akkulaufzeit}
    - Test
\subsection{Ausblick}
    BILD! ALLES mit BILDERN!!!
    Einfügbar: 
     - Induktionsladen
     - leichtere Veränderbarkeit der Zustände??
     - Passwort leichter ändern
     - größere Batterie
     massenproduktion?
     big upselling?
     Produkt allgemein?
     - kosten?
     



%\subsection{Ausblick} %Erweiterbarkeit durch mehr Displays


\newpage
\section{Literaturenverzeichnis}
\newpage
\section{Abbildungs- und Quellenverzeichnis}
%\renewcommand{\listoffigures}{}
\listoffigures


%\newpage
%\section*{Danksagung}
%Zuerst möchte ich mich bei meinem externen Betreuer Phillip Dockhorn bedanken, welcher mir sowohl sämtliches Arbeitsmaterial bzw. sämtliche Hardware zur Verfügung gestellt hat als auch mir jederzeit sämtliche inhaltliche Fragen zur BeLL beantwortet hat. Weiter konnte ich durch seine durchweg voranschreitende Art zu Arbeiten effizienter an der BeLL arbeiten. 

%Mein weiterer Dank gilt der HTWK, welche mir auch durch Herrn Dockhorn einen Arbeitsraum zum effizienten Erarbeiten der BeLL zur verfügung stellte. 

%Zuletzt möchte ich mich noch bei Herrn Simon [?-nachschauen!] Koch bedanken, welcher mir als mein interner Betreuer stets für Fragen zur Verfügung stand.

\newpage
\section*{Selbstständigkeitserklärung}
Hiermit bestätige ich, dass ich alle hier in der BeLL veröffentlichten Informationen selbstständig erarbeitet habe. 
\\ \\ \\ \\ \\Leopold Hofmann



\end{document}
